#!/usr/bin/with-contenv bash
#shellcheck shell=bash

if [[ -z "$DISABLE_PERFORMANCE_GRAPHS" ]]; then

    # Set environment variables that these scripts expect

    graph_size="$READSB_GRAPH_SIZE"
    all_large="$READSB_GRAPH_ALL_LARGE"
    font_size="$READSB_GRAPH_FONT_SIZE"
    max_messages_line="$READSB_GRAPH_MAX_MESSAGES_LINE"
    lwidth="$READSB_GRAPH_LARGE_WIDTH"
    lheight="$READSB_GRAPH_LARGE_HEIGHT"
    swidth="$READSB_GRAPH_SMALL_WIDTH"
    sheight="$READSB_GRAPH_SMALL_HEIGHT"
    ul_message_rate=
    ul_aircraft=
    ul_tracks=
    ul_range=
    ul_maxima=
    ul_rate_per_aircraft=
    ul_adsb_cpu=
    ul_range_uat=
    export graph_size all_large font_size max_messages_line lwidth lheight swidth sheight
    export ul_message_rate ul_aircraft ul_tracks ul_range ul_maxima ul_rate_per_aircraft ul_adsb_cpu ul_range_uat
    
    # make sure that /var/lib/collectd/rrd/localhost/readsb exists for readsbrrd to be able to write to it
    mkdir -p /var/lib/collectd/rrd/localhost/readsb

    if [[ -n "$VERBOSE_LOGGING" ]]; then

        set -eo pipefail

        #shellcheck disable=SC2016
        /usr/local/bin/readsbrrd \
            --rrd-step "$READSBRRD_STEP" \
            --rrd-dir "/var/lib/collectd/rrd/localhost/readsb" \
        2>&1 | stdbuf -o0 awk '{print "[readsbrrd] " strftime("%Y/%m/%d %H:%M:%S", systime()) " " $0}'
    else

        set -eo pipefail

        #shellcheck disable=SC2016
        /usr/local/bin/readsbrrd \
            --rrd-step "$READSBRRD_STEP" \
            --rrd-dir "/var/lib/collectd/rrd/localhost/readsb" \
        2>&1 | stdbuf -o0 awk '{print "[readsbrrd] " strftime("%Y/%m/%d %H:%M:%S", systime()) " " $0}' | \
        grep -v ': File exists' | \
        grep -v 'error system time in past compared to last entry'
    fi

else
    sleep 86400
fi
